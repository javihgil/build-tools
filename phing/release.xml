<?xml version="1.0" encoding="UTF-8"?>

<project name="release" default="-empty">

    <target name="-empty" hidden="true">
        <echo message="Empty target for document validation"/>
    </target>

    <target name="-release-check" hidden="true" depends="init">
        <if>
            <and>
                <istrue value="${module}" />
                <not><isset property="moduleName" /></not>
            </and>
            <then>
                <fail message="Modules only can released from parent" />
            </then>
        </if>

        <if>
            <equals arg1="${release.version}" arg2="" trim="true"/>
            <then>
                <fail message="release.version parameter is empty" />
            </then>
        </if>

        <if>
            <equals arg1="${release.next.version}" arg2="" trim="true"/>
            <then>
                <fail message="release.version parameter is empty" />
            </then>
        </if>

        <if>
            <isset property="RELEASE_VERSION" />
            <then>
                <echo message="Release version got from Jenkins Release plugin RELEASE_VERSION: ${RELEASE_VERSION}"/>
                <property name="release.version" value="${RELEASE_VERSION}" />
            </then>
        </if>

        <if>
            <isset property="DEVELOPMENT_VERSION" />
            <then>
                <echo message="Release next development version got from Jenkins Release plugin DEVELOPMENT_VERSION: ${DEVELOPMENT_VERSION}"/>
                <property name="release.next.version" value="${DEVELOPMENT_VERSION}" />
            </then>
        </if>

        <if>
            <not><isset property="release.version" /></not>
            <then>
                <composr action="get-version" property="release.version" forceVersionType="release" />
                <echo message="release.version parameter is not present. Release version got from composer.json: ${release.version}" level="warning" />
            </then>
        </if>

        <if>
            <not><isset property="release.next.version" /></not>
            <then>
                <composr action="get-version" property="release.next.version" increment="true" />
                <echo message="release.next.version parameter is not present. Next build version got from composer.json: ${release.next.version}" level="warning" />
            </then>
        </if>

        <echo message="git pull --rebase origin" />
        <exec command="git pull --rebase origin" checkreturn="true" passthru="true" />

        <echo message="git tag | grep ${phing.project.name}-${release.version} | wc -l" />
        <exec command="git tag | grep ${phing.project.name}-${release.version} | wc -l" outputProperty="tag.exists"  checkreturn="true" passthru="true" />

        <if>
            <equals arg1="${tag.exists}" arg2="1"/>
            <then>
                <fail message="${release.version} version already exists as tag in the git repository" />
            </then>
        </if>
    </target>

    <target name="-release-tag" hidden="true">
        <echo message="git checkout ${release.branch}" />
        <exec command="git checkout ${release.branch}" checkreturn="true" passthru="true" />

        <composr action="version-update" version="${release.version}" forceVersionType="release" />

        <echo message="git add ." />
        <exec command="git add ." checkreturn="true" passthru="true" />

        <echo message="git commit -m 'Phing release ${release.version}'" />
        <exec command="git commit -m 'Phing release ${release.version}'" checkreturn="true" passthru="true" />

        <echo message="git tag ${phing.project.name}-${release.version}" />
        <exec command="git tag ${phing.project.name}-${release.version}" checkreturn="true" passthru="true" />

        <echo message="git push origin ${release.branch}"/>
        <exec command="git push origin ${release.branch}" checkreturn="true" passthru="true" />

        <echo message="git push --tags origin ${phing.project.name}-${release.version}" />
        <exec command="git push --tags origin ${phing.project.name}-${release.version}" checkreturn="true" passthru="true" />
    </target>

    <target name="-release-prepare-next" hidden="true">
        <echo message="git checkout ${release.branch}" />
        <exec command="git checkout ${release.branch}" checkreturn="true" passthru="true" />

        <composr action="version-update" version="${release.next.version}" forceVersionType="dev" />

        <echo message="git add ." />
        <exec command="git add ." checkreturn="true" passthru="true" />

        <echo message="git commit -m 'Phing prepare next development iteration: ${release.next.version}'" />
        <exec command="git commit -m 'Phing prepare next development iteration: ${release.next.version}'" checkreturn="true" passthru="true" />

        <echo message="git push origin ${release.branch}" />
        <exec command="git push origin ${release.branch}" checkreturn="true" passthru="true" />
    </target>

</project>